const User = require('../models/UserModel');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');

const authorize = async (req, res, next) => {
    const { email, password } = req.body;

    if (!email || !password) return res.status(400).json({ 'message': 'Username and password required.' });

    const existingUser = await User.findOne({ email: email }).exec();
    if (!existingUser) return res.sendStatus(401);

    const verifyPassword = await bcrypt.compare(password, existingUser.password);
    if (verifyPassword) {
        const accessToken = jwt.sign(
            {
                "UserInfo": {
                    "email": existingUser.email
                }
            },
            process.env.ACCESS_TOKEN_SECRET,
            { expiresIn: '10s' }
        );
        const refreshToken = jwt.sign(
            {"email": existingUser.email},
            process.env.REFRESH_TOKEN_SECRET,
            { expiresIn: '1d' }
        );

        existingUser.refreshToken = refreshToken;
        const result = await existingUser.save();

        
        res.cookie('jwt', refreshToken, { httpOnly: true, secure: true, sameSite: 'None', maxAge: 24 * 60 * 60* 1000});
        console.log(result);
        // next();
        res.redirect('/main');
    } else {
        res.sendStatus(401);
    }
}

module.exports = { authorize };